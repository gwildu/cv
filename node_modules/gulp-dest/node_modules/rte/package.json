{
  "name": "rte",
  "description": "Simple filepath re-writing for node.js projects. Useful for re-writing paths in grunt/gulp/assemble tasks or plugins.",
  "version": "1.0.0",
  "homepage": "https://github.com/jonschlinkert/rte",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/rte.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/rte/issues"
  },
  "license": {
    "type": "MIT",
    "url": "https://github.com/jonschlinkert/rte/blob/master/LICENSE-MIT"
  },
  "main": "index.js",
  "engines": {
    "node": ">=0.8"
  },
  "scripts": {
    "test": "mocha -R spec",
    "docs": "update && license && npmignore && deps && verb",
    "all": "npm run test && npm run docs"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "dependencies": {
    "extend-shallow": "^0.2.0",
    "parse-filepath": "^0.5.0"
  },
  "keywords": [
    "basename",
    "blog",
    "directory",
    "dirname",
    "ext",
    "extname",
    "filepath",
    "fs",
    "link",
    "path",
    "permalinks",
    "post",
    "rename",
    "rewrite",
    "rewriting",
    "route",
    "routes",
    "routing",
    "uri",
    "url",
    "url-routing"
  ],
  "readme": "# rte [![NPM version](https://badge.fury.io/js/rte.svg)](http://badge.fury.io/js/rte)\n\n> Simple filepath re-writing for node.js projects. Useful for re-writing paths in grunt/gulp/assemble tasks or plugins.\n\n## Install with [npm](npmjs.org)\n\n```bash\nnpm i rte --save\n```\n\n## Usage\n\n```js\nvar rte = require('rte');\n```\n\n## API\n### [rte](index.js#L48)\n\nStringify a file path by replacing `:properties` in a template with values from the given context.\n\n* `src` **{String}**: Optionally pass a source file path to parse.    \n* `template` **{String}**: Template for the destination file path with `:properties` to replace.    \n* `context` **{Object}**: Object with values to pass to the template.    \n\n**Examples:**\n\n```js\nrte(':a/:b:.c', { a: 'aaa', b: 'bbb', c: 'js' });\n//=> 'aaa/bbb/c.js'\n```\n\nWhen a `source` file path is passed as the first argument, it will\nbe parsed and the resulting object will merged with the context\nobject (properties on the context object take precendence).\n\n```js\nrte('a/b/c.html', ':destbase/:basename', { destbase: 'foo' });\n//=> 'foo/c.html'\n```\n\n\n\n## Run tests\n\n```bash\nnpm test\n```\n\n## Contributing\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/rte/issues)\n\n\n## Author\n\n**Jon Schlinkert**\n \n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) \n\n## License\nCopyright (c) 2014-2015 Jon Schlinkert.\nReleased under the MIT license\n\n***\n\n_This file was generated by [verb](https://github.com/assemble/verb) on December 30, 2014._\n",
  "readmeFilename": "README.md",
  "_id": "rte@1.0.0",
  "_from": "rte@>=1.0.0 <2.0.0"
}
